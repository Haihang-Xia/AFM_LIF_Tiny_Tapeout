$date
	Mon Sep 15 13:55:36 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 8 ! ena [7:0] $end
$var wire 8 " uo_out [7:0] $end
$var wire 8 # uio_out [7:0] $end
$var wire 8 $ uio_oe [7:0] $end
$var reg 1 % clk $end
$var reg 1 & rst $end
$var reg 8 ' ui_in [7:0] $end
$var reg 8 ( uio_in [7:0] $end
$scope module UUT $end
$var wire 1 ) _unused $end
$var wire 1 % clk $end
$var wire 1 * ena $end
$var wire 1 & rst_n $end
$var wire 8 + ui_in [7:0] $end
$var wire 8 , uio_in [7:0] $end
$var wire 16 - wi_vin [15:0] $end
$var wire 16 . vout0 [15:0] $end
$var wire 16 / vout [15:0] $end
$var wire 32 0 vet [31:0] $end
$var wire 18 1 v_new [17:0] $end
$var wire 17 2 v_e [16:0] $end
$var wire 8 3 uo_out [7:0] $end
$var wire 8 4 uio_out [7:0] $end
$var wire 8 5 uio_oe [7:0] $end
$var wire 1 6 spike $end
$var wire 16 7 scl_vet [15:0] $end
$var wire 16 8 scl_ve [15:0] $end
$var wire 8 9 i [7:0] $end
$var wire 17 : e_i [16:0] $end
$var reg 16 ; E_REST [15:0] $end
$var reg 16 < E_TAU [15:0] $end
$var reg 16 = V_TH [15:0] $end
$var reg 16 > buffer0 [15:0] $end
$var reg 16 ? buffer1 [15:0] $end
$var reg 16 @ buffer2 [15:0] $end
$var reg 16 A buffer3 [15:0] $end
$var reg 16 B buffer4 [15:0] $end
$var reg 16 C buffer5 [15:0] $end
$var reg 16 D buffer6 [15:0] $end
$var reg 16 E buffer7 [15:0] $end
$var reg 4 F cycle [3:0] $end
$var reg 1 G i_c $end
$var reg 1 H ini $end
$var reg 4 I ini_count [3:0] $end
$var reg 1 J inter $end
$var reg 1 K ioctrl $end
$var reg 1 L par $end
$var reg 4 M parcount [3:0] $end
$var reg 17 N pip2_ei [16:0] $end
$var reg 17 O pip2_ve [16:0] $end
$var reg 17 P pip3_ei [16:0] $end
$var reg 1 Q pip3_sve $end
$var reg 17 R pip4_ei [16:0] $end
$var reg 1 S pip4_sve $end
$var reg 17 T pip5_ei [16:0] $end
$var reg 1 U pip5_sve $end
$var reg 17 V pip6_ei [16:0] $end
$var reg 1 W pip6_sve $end
$var reg 17 X pip7_ei [16:0] $end
$var reg 1 Y pip7_sve $end
$var reg 17 Z pip8_ei [16:0] $end
$var reg 1 [ pip8_sve $end
$var reg 17 \ pip9_ei [16:0] $end
$var reg 1 ] pip9_sve $end
$var reg 17 ^ pip9_vet [16:0] $end
$var reg 1 _ set $end
$var reg 1 ` sign_ve $end
$var reg 4 a state [3:0] $end
$var reg 16 b v_ini [15:0] $end
$var reg 16 c vin [15:0] $end
$scope module adder0 $end
$var wire 16 d s_a [15:0] $end
$var wire 16 e s_b [15:0] $end
$var wire 17 f s_c [16:0] $end
$var wire 4 g s5 [3:0] $end
$var wire 4 h s4 [3:0] $end
$var wire 4 i s3 [3:0] $end
$var wire 1 j s2 $end
$var wire 1 k s1 $end
$var wire 1 l s0 $end
$var wire 1 m cin5 $end
$var wire 1 n cin4 $end
$var wire 1 o cin3 $end
$var wire 1 p cin2 $end
$var wire 1 q cin1 $end
$var wire 1 r cin0 $end
$var wire 4 s b5 [3:0] $end
$var wire 4 t b4 [3:0] $end
$var wire 4 u b3 [3:0] $end
$var wire 1 v b2 $end
$var wire 1 w b1 $end
$var wire 1 x b0 $end
$var wire 15 y b [14:0] $end
$var wire 4 z a5 [3:0] $end
$var wire 4 { a4 [3:0] $end
$var wire 4 | a3 [3:0] $end
$var wire 1 } a2 $end
$var wire 1 ~ a1 $end
$var wire 1 !" a0 $end
$var wire 15 "" a [14:0] $end
$scope module adder0 $end
$var wire 1 !" a $end
$var wire 1 x b $end
$var wire 1 r cout $end
$var wire 1 l s $end
$upscope $end
$scope module adder1 $end
$var wire 1 ~ a $end
$var wire 1 w b $end
$var wire 1 r cin $end
$var wire 1 q cout $end
$var wire 1 k s $end
$upscope $end
$scope module adder2 $end
$var wire 1 } a $end
$var wire 1 v b $end
$var wire 1 q cin $end
$var wire 1 p cout $end
$var wire 1 j s $end
$upscope $end
$scope module adder3 $end
$var wire 4 #" a [3:0] $end
$var wire 4 $" b [3:0] $end
$var wire 1 p cin $end
$var wire 4 %" s [3:0] $end
$var wire 4 &" p [3:0] $end
$var wire 4 '" g [3:0] $end
$var wire 1 o cout $end
$var wire 4 (" c [3:0] $end
$upscope $end
$scope module adder4 $end
$var wire 4 )" a [3:0] $end
$var wire 4 *" b [3:0] $end
$var wire 1 o cin $end
$var wire 4 +" s [3:0] $end
$var wire 4 ," p [3:0] $end
$var wire 4 -" g [3:0] $end
$var wire 1 n cout $end
$var wire 4 ." c [3:0] $end
$upscope $end
$scope module adder5 $end
$var wire 4 /" a [3:0] $end
$var wire 4 0" b [3:0] $end
$var wire 1 n cin $end
$var wire 4 1" s [3:0] $end
$var wire 4 2" p [3:0] $end
$var wire 4 3" g [3:0] $end
$var wire 1 m cout $end
$var wire 4 4" c [3:0] $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 1 5" ct $end
$var wire 17 6" s_a [16:0] $end
$var wire 17 7" s_b [16:0] $end
$var wire 18 8" s_c [17:0] $end
$var wire 4 9" s3 [3:0] $end
$var wire 4 :" s2 [3:0] $end
$var wire 4 ;" s1 [3:0] $end
$var wire 4 <" s0 [3:0] $end
$var wire 1 =" cin3 $end
$var wire 1 >" cin2 $end
$var wire 1 ?" cin1 $end
$var wire 1 @" cin0 $end
$var wire 4 A" b3 [3:0] $end
$var wire 4 B" b2 [3:0] $end
$var wire 4 C" b1 [3:0] $end
$var wire 4 D" b0 [3:0] $end
$var wire 32 E" b [31:0] $end
$var wire 4 F" a3 [3:0] $end
$var wire 4 G" a2 [3:0] $end
$var wire 4 H" a1 [3:0] $end
$var wire 4 I" a0 [3:0] $end
$var wire 32 J" a [31:0] $end
$scope module adder0 $end
$var wire 4 K" a [3:0] $end
$var wire 4 L" b [3:0] $end
$var wire 1 5" cin $end
$var wire 4 M" s [3:0] $end
$var wire 4 N" p [3:0] $end
$var wire 4 O" g [3:0] $end
$var wire 1 @" cout $end
$var wire 4 P" c [3:0] $end
$upscope $end
$scope module adder1 $end
$var wire 4 Q" a [3:0] $end
$var wire 4 R" b [3:0] $end
$var wire 1 @" cin $end
$var wire 4 S" s [3:0] $end
$var wire 4 T" p [3:0] $end
$var wire 4 U" g [3:0] $end
$var wire 1 ?" cout $end
$var wire 4 V" c [3:0] $end
$upscope $end
$scope module adder2 $end
$var wire 4 W" a [3:0] $end
$var wire 4 X" b [3:0] $end
$var wire 1 ?" cin $end
$var wire 4 Y" s [3:0] $end
$var wire 4 Z" p [3:0] $end
$var wire 4 [" g [3:0] $end
$var wire 1 >" cout $end
$var wire 4 \" c [3:0] $end
$upscope $end
$scope module adder3 $end
$var wire 4 ]" a [3:0] $end
$var wire 4 ^" b [3:0] $end
$var wire 1 >" cin $end
$var wire 4 _" s [3:0] $end
$var wire 4 `" p [3:0] $end
$var wire 4 a" g [3:0] $end
$var wire 1 =" cout $end
$var wire 4 b" c [3:0] $end
$upscope $end
$upscope $end
$scope module mul0 $end
$var wire 16 c" a [15:0] $end
$var wire 16 d" b [15:0] $end
$var wire 1 % clk $end
$var wire 1 e" z $end
$var wire 1 f" z2 $end
$var wire 1 g" z1 $end
$var wire 18 h" y [17:0] $end
$var wire 16 i" x_star [15:0] $end
$var wire 18 j" x [17:0] $end
$var wire 17 k" sum [16:0] $end
$var wire 32 l" out [31:0] $end
$var wire 1 m" none $end
$var wire 4 n" kb [3:0] $end
$var wire 4 o" ka [3:0] $end
$var wire 4 p" k0 [3:0] $end
$var wire 5 q" k [4:0] $end
$var wire 18 r" gamma_18bit [17:0] $end
$var wire 17 s" gamma [16:0] $end
$var wire 16 t" beta [15:0] $end
$var wire 9 u" b_star [8:0] $end
$var wire 16 v" b_new [15:0] $end
$var wire 16 w" alpha [15:0] $end
$var wire 9 x" a_star [8:0] $end
$var wire 16 y" a_new [15:0] $end
$var reg 8 z" ah [7:0] $end
$var reg 8 {" al [7:0] $end
$var reg 8 |" bh [7:0] $end
$var reg 8 }" bl [7:0] $end
$var reg 5 ~" pip0_k [4:0] $end
$var reg 4 !# pip0_ka [3:0] $end
$var reg 4 "# pip0_kb [3:0] $end
$var reg 1 ## pip0_z $end
$var reg 5 $# pip1_k [4:0] $end
$var reg 1 %# pip1_z $end
$var reg 5 &# pip2_k [4:0] $end
$var reg 1 '# pip2_z $end
$var reg 5 (# pip3_k [4:0] $end
$var reg 1 )# pip3_z $end
$var reg 5 *# pip4_k [4:0] $end
$var reg 1 +# pip4_z $end
$var reg 1 ,# pip5_z $end
$var reg 16 -# pip_alpha0 [15:0] $end
$var reg 16 .# pip_alpha1 [15:0] $end
$var reg 16 /# pip_alpha2 [15:0] $end
$var reg 9 0# pip_astar [8:0] $end
$var reg 16 1# pip_beta0 [15:0] $end
$var reg 16 2# pip_beta1 [15:0] $end
$var reg 16 3# pip_beta2 [15:0] $end
$var reg 16 4# pip_beta3 [15:0] $end
$var reg 9 5# pip_bstar [8:0] $end
$var reg 18 6# pip_gamma [17:0] $end
$var reg 17 7# pip_sum [16:0] $end
$var reg 16 8# pip_x [15:0] $end
$var reg 18 9# pip_y [17:0] $end
$scope module adder0 $end
$var wire 8 :# a [7:0] $end
$var wire 8 ;# b [7:0] $end
$var wire 1 <# ct $end
$var wire 4 =# s1 [3:0] $end
$var wire 4 ># s0 [3:0] $end
$var wire 1 ?# cin1 $end
$var wire 1 @# cin0 $end
$var wire 9 A# c [8:0] $end
$var wire 4 B# b1 [3:0] $end
$var wire 4 C# b0 [3:0] $end
$var wire 4 D# a1 [3:0] $end
$var wire 4 E# a0 [3:0] $end
$scope module adder0 $end
$var wire 4 F# a [3:0] $end
$var wire 4 G# b [3:0] $end
$var wire 1 <# cin $end
$var wire 4 H# s [3:0] $end
$var wire 4 I# p [3:0] $end
$var wire 4 J# g [3:0] $end
$var wire 1 @# cout $end
$var wire 4 K# c [3:0] $end
$upscope $end
$scope module adder1 $end
$var wire 4 L# a [3:0] $end
$var wire 4 M# b [3:0] $end
$var wire 1 @# cin $end
$var wire 4 N# s [3:0] $end
$var wire 4 O# p [3:0] $end
$var wire 4 P# g [3:0] $end
$var wire 1 ?# cout $end
$var wire 4 Q# c [3:0] $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 8 R# a [7:0] $end
$var wire 8 S# b [7:0] $end
$var wire 1 T# ct $end
$var wire 4 U# s1 [3:0] $end
$var wire 4 V# s0 [3:0] $end
$var wire 1 W# cin1 $end
$var wire 1 X# cin0 $end
$var wire 9 Y# c [8:0] $end
$var wire 4 Z# b1 [3:0] $end
$var wire 4 [# b0 [3:0] $end
$var wire 4 \# a1 [3:0] $end
$var wire 4 ]# a0 [3:0] $end
$scope module adder0 $end
$var wire 4 ^# a [3:0] $end
$var wire 4 _# b [3:0] $end
$var wire 1 T# cin $end
$var wire 4 `# s [3:0] $end
$var wire 4 a# p [3:0] $end
$var wire 4 b# g [3:0] $end
$var wire 1 X# cout $end
$var wire 4 c# c [3:0] $end
$upscope $end
$scope module adder1 $end
$var wire 4 d# a [3:0] $end
$var wire 4 e# b [3:0] $end
$var wire 1 X# cin $end
$var wire 4 f# s [3:0] $end
$var wire 4 g# p [3:0] $end
$var wire 4 h# g [3:0] $end
$var wire 1 W# cout $end
$var wire 4 i# c [3:0] $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 16 j# a [15:0] $end
$var wire 16 k# b [15:0] $end
$var wire 1 l# ct $end
$var wire 4 m# s3 [3:0] $end
$var wire 4 n# s2 [3:0] $end
$var wire 4 o# s1 [3:0] $end
$var wire 4 p# s0 [3:0] $end
$var wire 1 q# cin3 $end
$var wire 1 r# cin2 $end
$var wire 1 s# cin1 $end
$var wire 1 t# cin0 $end
$var wire 17 u# c [16:0] $end
$var wire 4 v# b3 [3:0] $end
$var wire 4 w# b2 [3:0] $end
$var wire 4 x# b1 [3:0] $end
$var wire 4 y# b0 [3:0] $end
$var wire 4 z# a3 [3:0] $end
$var wire 4 {# a2 [3:0] $end
$var wire 4 |# a1 [3:0] $end
$var wire 4 }# a0 [3:0] $end
$scope module adder0 $end
$var wire 4 ~# a [3:0] $end
$var wire 4 !$ b [3:0] $end
$var wire 1 l# cin $end
$var wire 4 "$ s [3:0] $end
$var wire 4 #$ p [3:0] $end
$var wire 4 $$ g [3:0] $end
$var wire 1 t# cout $end
$var wire 4 %$ c [3:0] $end
$upscope $end
$scope module adder1 $end
$var wire 4 &$ a [3:0] $end
$var wire 4 '$ b [3:0] $end
$var wire 1 t# cin $end
$var wire 4 ($ s [3:0] $end
$var wire 4 )$ p [3:0] $end
$var wire 4 *$ g [3:0] $end
$var wire 1 s# cout $end
$var wire 4 +$ c [3:0] $end
$upscope $end
$scope module adder2 $end
$var wire 4 ,$ a [3:0] $end
$var wire 4 -$ b [3:0] $end
$var wire 1 s# cin $end
$var wire 4 .$ s [3:0] $end
$var wire 4 /$ p [3:0] $end
$var wire 4 0$ g [3:0] $end
$var wire 1 r# cout $end
$var wire 4 1$ c [3:0] $end
$upscope $end
$scope module adder3 $end
$var wire 4 2$ a [3:0] $end
$var wire 4 3$ b [3:0] $end
$var wire 1 r# cin $end
$var wire 4 4$ s [3:0] $end
$var wire 4 5$ p [3:0] $end
$var wire 4 6$ g [3:0] $end
$var wire 1 q# cout $end
$var wire 4 7$ c [3:0] $end
$upscope $end
$upscope $end
$scope module adder3 $end
$var wire 16 8$ a [15:0] $end
$var wire 16 9$ b [15:0] $end
$var wire 1 :$ ct $end
$var wire 4 ;$ s3 [3:0] $end
$var wire 4 <$ s2 [3:0] $end
$var wire 4 =$ s1 [3:0] $end
$var wire 4 >$ s0 [3:0] $end
$var wire 1 ?$ cin3 $end
$var wire 1 @$ cin2 $end
$var wire 1 A$ cin1 $end
$var wire 1 B$ cin0 $end
$var wire 17 C$ c [16:0] $end
$var wire 4 D$ b3 [3:0] $end
$var wire 4 E$ b2 [3:0] $end
$var wire 4 F$ b1 [3:0] $end
$var wire 4 G$ b0 [3:0] $end
$var wire 4 H$ a3 [3:0] $end
$var wire 4 I$ a2 [3:0] $end
$var wire 4 J$ a1 [3:0] $end
$var wire 4 K$ a0 [3:0] $end
$scope module adder0 $end
$var wire 4 L$ a [3:0] $end
$var wire 4 M$ b [3:0] $end
$var wire 1 :$ cin $end
$var wire 4 N$ s [3:0] $end
$var wire 4 O$ p [3:0] $end
$var wire 4 P$ g [3:0] $end
$var wire 1 B$ cout $end
$var wire 4 Q$ c [3:0] $end
$upscope $end
$scope module adder1 $end
$var wire 4 R$ a [3:0] $end
$var wire 4 S$ b [3:0] $end
$var wire 1 B$ cin $end
$var wire 4 T$ s [3:0] $end
$var wire 4 U$ p [3:0] $end
$var wire 4 V$ g [3:0] $end
$var wire 1 A$ cout $end
$var wire 4 W$ c [3:0] $end
$upscope $end
$scope module adder2 $end
$var wire 4 X$ a [3:0] $end
$var wire 4 Y$ b [3:0] $end
$var wire 1 A$ cin $end
$var wire 4 Z$ s [3:0] $end
$var wire 4 [$ p [3:0] $end
$var wire 4 \$ g [3:0] $end
$var wire 1 @$ cout $end
$var wire 4 ]$ c [3:0] $end
$upscope $end
$scope module adder3 $end
$var wire 4 ^$ a [3:0] $end
$var wire 4 _$ b [3:0] $end
$var wire 1 @$ cin $end
$var wire 4 `$ s [3:0] $end
$var wire 4 a$ p [3:0] $end
$var wire 4 b$ g [3:0] $end
$var wire 1 ?$ cout $end
$var wire 4 c$ c [3:0] $end
$upscope $end
$upscope $end
$scope module adder4 $end
$var wire 4 d$ a [3:0] $end
$var wire 4 e$ b [3:0] $end
$var wire 1 f$ cin $end
$var wire 4 g$ s [3:0] $end
$var wire 4 h$ p [3:0] $end
$var wire 4 i$ g [3:0] $end
$var wire 1 m" cout $end
$var wire 4 j$ c [3:0] $end
$upscope $end
$scope module mul0 $end
$var wire 9 k$ a [8:0] $end
$var wire 9 l$ b [8:0] $end
$var wire 1 % clk $end
$var wire 1 m$ z $end
$var wire 1 n$ zb $end
$var wire 1 o$ za $end
$var wire 10 p$ sum0 [9:0] $end
$var wire 10 q$ sum [9:0] $end
$var wire 19 r$ out0 [18:0] $end
$var wire 18 s$ out [17:0] $end
$var wire 10 t$ offset [9:0] $end
$var wire 4 u$ kb [3:0] $end
$var wire 4 v$ ka [3:0] $end
$var wire 4 w$ k0 [3:0] $end
$var wire 5 x$ k [4:0] $end
$var wire 1 y$ cout $end
$var wire 1 z$ cin $end
$var wire 11 {$ cc [10:0] $end
$var wire 9 |$ bin [8:0] $end
$var wire 9 }$ bh [8:0] $end
$var wire 9 ~$ ain [8:0] $end
$var wire 9 !% ah [8:0] $end
$var reg 4 "% pip_ka [3:0] $end
$var reg 4 #% pip_kb [3:0] $end
$var reg 10 $% pip_sum [9:0] $end
$var reg 1 %% pip_z $end
$scope module adder0 $end
$var wire 9 &% a [8:0] $end
$var wire 9 '% b [8:0] $end
$var wire 1 (% ct $end
$var wire 4 )% s2 [3:0] $end
$var wire 4 *% s1 [3:0] $end
$var wire 1 +% s0 $end
$var wire 1 ,% cin2 $end
$var wire 1 -% cin1 $end
$var wire 1 .% cin0 $end
$var wire 10 /% c [9:0] $end
$var wire 4 0% b2 [3:0] $end
$var wire 4 1% b1 [3:0] $end
$var wire 1 2% b0 $end
$var wire 4 3% a2 [3:0] $end
$var wire 4 4% a1 [3:0] $end
$var wire 1 5% a0 $end
$scope module adder0 $end
$var wire 1 5% a $end
$var wire 1 2% b $end
$var wire 1 .% cout $end
$var wire 1 +% s $end
$upscope $end
$scope module adder1 $end
$var wire 4 6% a [3:0] $end
$var wire 4 7% b [3:0] $end
$var wire 1 .% cin $end
$var wire 4 8% s [3:0] $end
$var wire 4 9% p [3:0] $end
$var wire 4 :% g [3:0] $end
$var wire 1 -% cout $end
$var wire 4 ;% c [3:0] $end
$upscope $end
$scope module adder2 $end
$var wire 4 <% a [3:0] $end
$var wire 4 =% b [3:0] $end
$var wire 1 -% cin $end
$var wire 4 >% s [3:0] $end
$var wire 4 ?% p [3:0] $end
$var wire 4 @% g [3:0] $end
$var wire 1 ,% cout $end
$var wire 4 A% c [3:0] $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 10 B% a [9:0] $end
$var wire 10 C% b [9:0] $end
$var wire 1 D% ct $end
$var wire 4 E% s3 [3:0] $end
$var wire 4 F% s2 [3:0] $end
$var wire 1 G% s1 $end
$var wire 1 H% s0 $end
$var wire 1 I% cin3 $end
$var wire 1 J% cin2 $end
$var wire 1 K% cin1 $end
$var wire 1 L% cin0 $end
$var wire 11 M% c [10:0] $end
$var wire 4 N% b3 [3:0] $end
$var wire 4 O% b2 [3:0] $end
$var wire 1 P% b1 $end
$var wire 1 Q% b0 $end
$var wire 4 R% a3 [3:0] $end
$var wire 4 S% a2 [3:0] $end
$var wire 1 T% a1 $end
$var wire 1 U% a0 $end
$scope module adder0 $end
$var wire 1 U% a $end
$var wire 1 Q% b $end
$var wire 1 L% cout $end
$var wire 1 H% s $end
$upscope $end
$scope module adder1 $end
$var wire 1 T% a $end
$var wire 1 P% b $end
$var wire 1 L% cin $end
$var wire 1 K% cout $end
$var wire 1 G% s $end
$upscope $end
$scope module adder2 $end
$var wire 4 V% a [3:0] $end
$var wire 4 W% b [3:0] $end
$var wire 1 K% cin $end
$var wire 4 X% s [3:0] $end
$var wire 4 Y% p [3:0] $end
$var wire 4 Z% g [3:0] $end
$var wire 1 J% cout $end
$var wire 4 [% c [3:0] $end
$upscope $end
$scope module adder3 $end
$var wire 4 \% a [3:0] $end
$var wire 4 ]% b [3:0] $end
$var wire 1 J% cin $end
$var wire 4 ^% s [3:0] $end
$var wire 4 _% p [3:0] $end
$var wire 4 `% g [3:0] $end
$var wire 1 I% cout $end
$var wire 4 a% c [3:0] $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 b% a [3:0] $end
$var wire 4 c% b [3:0] $end
$var wire 1 z$ cin $end
$var wire 4 d% s [3:0] $end
$var wire 4 e% p [3:0] $end
$var wire 4 f% g [3:0] $end
$var wire 1 y$ cout $end
$var wire 4 g% c [3:0] $end
$upscope $end
$scope module preprocess0 $end
$var wire 9 h% data [8:0] $end
$var wire 4 i% kout [3:0] $end
$var wire 9 j% out [8:0] $end
$var wire 1 o$ z $end
$var reg 9 k% dataout [8:0] $end
$var reg 4 l% k1 [3:0] $end
$var reg 1 o$ z1 $end
$upscope $end
$scope module preprocess1 $end
$var wire 9 m% data [8:0] $end
$var wire 4 n% kout [3:0] $end
$var wire 9 o% out [8:0] $end
$var wire 1 n$ z $end
$var reg 9 p% dataout [8:0] $end
$var reg 4 q% k1 [3:0] $end
$var reg 1 n$ z1 $end
$upscope $end
$upscope $end
$scope module mul1 $end
$var wire 8 r% a [7:0] $end
$var wire 8 s% b [7:0] $end
$var wire 1 % clk $end
$var wire 1 t% z $end
$var wire 1 u% zb $end
$var wire 1 v% za $end
$var wire 9 w% sum0 [8:0] $end
$var wire 9 x% sum [8:0] $end
$var wire 17 y% out0 [16:0] $end
$var wire 16 z% out [15:0] $end
$var wire 9 {% offset [8:0] $end
$var wire 4 |% kb [3:0] $end
$var wire 4 }% ka [3:0] $end
$var wire 4 ~% k0 [3:0] $end
$var wire 5 !& k [4:0] $end
$var wire 1 "& cout $end
$var wire 1 #& cin $end
$var wire 10 $& cc [9:0] $end
$var wire 8 %& bin [7:0] $end
$var wire 8 && bh [7:0] $end
$var wire 8 '& ain [7:0] $end
$var wire 8 (& ah [7:0] $end
$var reg 4 )& pip_ka [3:0] $end
$var reg 4 *& pip_kb [3:0] $end
$var reg 9 +& pip_sum [8:0] $end
$var reg 1 ,& pip_z $end
$scope module adder0 $end
$var wire 8 -& a [7:0] $end
$var wire 8 .& b [7:0] $end
$var wire 1 /& ct $end
$var wire 4 0& s1 [3:0] $end
$var wire 4 1& s0 [3:0] $end
$var wire 1 2& cin1 $end
$var wire 1 3& cin0 $end
$var wire 9 4& c [8:0] $end
$var wire 4 5& b1 [3:0] $end
$var wire 4 6& b0 [3:0] $end
$var wire 4 7& a1 [3:0] $end
$var wire 4 8& a0 [3:0] $end
$scope module adder0 $end
$var wire 4 9& a [3:0] $end
$var wire 4 :& b [3:0] $end
$var wire 1 /& cin $end
$var wire 4 ;& s [3:0] $end
$var wire 4 <& p [3:0] $end
$var wire 4 =& g [3:0] $end
$var wire 1 3& cout $end
$var wire 4 >& c [3:0] $end
$upscope $end
$scope module adder1 $end
$var wire 4 ?& a [3:0] $end
$var wire 4 @& b [3:0] $end
$var wire 1 3& cin $end
$var wire 4 A& s [3:0] $end
$var wire 4 B& p [3:0] $end
$var wire 4 C& g [3:0] $end
$var wire 1 2& cout $end
$var wire 4 D& c [3:0] $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 9 E& a [8:0] $end
$var wire 9 F& b [8:0] $end
$var wire 1 G& ct $end
$var wire 4 H& s2 [3:0] $end
$var wire 4 I& s1 [3:0] $end
$var wire 1 J& s0 $end
$var wire 1 K& cin2 $end
$var wire 1 L& cin1 $end
$var wire 1 M& cin0 $end
$var wire 10 N& c [9:0] $end
$var wire 4 O& b2 [3:0] $end
$var wire 4 P& b1 [3:0] $end
$var wire 1 Q& b0 $end
$var wire 4 R& a2 [3:0] $end
$var wire 4 S& a1 [3:0] $end
$var wire 1 T& a0 $end
$scope module adder0 $end
$var wire 1 T& a $end
$var wire 1 Q& b $end
$var wire 1 M& cout $end
$var wire 1 J& s $end
$upscope $end
$scope module adder1 $end
$var wire 4 U& a [3:0] $end
$var wire 4 V& b [3:0] $end
$var wire 1 M& cin $end
$var wire 4 W& s [3:0] $end
$var wire 4 X& p [3:0] $end
$var wire 4 Y& g [3:0] $end
$var wire 1 L& cout $end
$var wire 4 Z& c [3:0] $end
$upscope $end
$scope module adder2 $end
$var wire 4 [& a [3:0] $end
$var wire 4 \& b [3:0] $end
$var wire 1 L& cin $end
$var wire 4 ]& s [3:0] $end
$var wire 4 ^& p [3:0] $end
$var wire 4 _& g [3:0] $end
$var wire 1 K& cout $end
$var wire 4 `& c [3:0] $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 a& a [3:0] $end
$var wire 4 b& b [3:0] $end
$var wire 1 #& cin $end
$var wire 4 c& s [3:0] $end
$var wire 4 d& p [3:0] $end
$var wire 4 e& g [3:0] $end
$var wire 1 "& cout $end
$var wire 4 f& c [3:0] $end
$upscope $end
$scope module preprocess0 $end
$var wire 8 g& data [7:0] $end
$var wire 4 h& kout [3:0] $end
$var wire 8 i& out [7:0] $end
$var wire 1 v% z $end
$var reg 8 j& dataout [7:0] $end
$var reg 4 k& k1 [3:0] $end
$var reg 1 v% z1 $end
$upscope $end
$scope module preprocess1 $end
$var wire 8 l& data [7:0] $end
$var wire 4 m& kout [3:0] $end
$var wire 8 n& out [7:0] $end
$var wire 1 u% z $end
$var reg 8 o& dataout [7:0] $end
$var reg 4 p& k1 [3:0] $end
$var reg 1 u% z1 $end
$upscope $end
$upscope $end
$scope module mul2 $end
$var wire 8 q& a [7:0] $end
$var wire 8 r& b [7:0] $end
$var wire 1 % clk $end
$var wire 1 s& z $end
$var wire 1 t& zb $end
$var wire 1 u& za $end
$var wire 9 v& sum0 [8:0] $end
$var wire 9 w& sum [8:0] $end
$var wire 17 x& out0 [16:0] $end
$var wire 16 y& out [15:0] $end
$var wire 9 z& offset [8:0] $end
$var wire 4 {& kb [3:0] $end
$var wire 4 |& ka [3:0] $end
$var wire 4 }& k0 [3:0] $end
$var wire 5 ~& k [4:0] $end
$var wire 1 !' cout $end
$var wire 1 "' cin $end
$var wire 10 #' cc [9:0] $end
$var wire 8 $' bin [7:0] $end
$var wire 8 %' bh [7:0] $end
$var wire 8 &' ain [7:0] $end
$var wire 8 '' ah [7:0] $end
$var reg 4 (' pip_ka [3:0] $end
$var reg 4 )' pip_kb [3:0] $end
$var reg 9 *' pip_sum [8:0] $end
$var reg 1 +' pip_z $end
$scope module adder0 $end
$var wire 8 ,' a [7:0] $end
$var wire 8 -' b [7:0] $end
$var wire 1 .' ct $end
$var wire 4 /' s1 [3:0] $end
$var wire 4 0' s0 [3:0] $end
$var wire 1 1' cin1 $end
$var wire 1 2' cin0 $end
$var wire 9 3' c [8:0] $end
$var wire 4 4' b1 [3:0] $end
$var wire 4 5' b0 [3:0] $end
$var wire 4 6' a1 [3:0] $end
$var wire 4 7' a0 [3:0] $end
$scope module adder0 $end
$var wire 4 8' a [3:0] $end
$var wire 4 9' b [3:0] $end
$var wire 1 .' cin $end
$var wire 4 :' s [3:0] $end
$var wire 4 ;' p [3:0] $end
$var wire 4 <' g [3:0] $end
$var wire 1 2' cout $end
$var wire 4 =' c [3:0] $end
$upscope $end
$scope module adder1 $end
$var wire 4 >' a [3:0] $end
$var wire 4 ?' b [3:0] $end
$var wire 1 2' cin $end
$var wire 4 @' s [3:0] $end
$var wire 4 A' p [3:0] $end
$var wire 4 B' g [3:0] $end
$var wire 1 1' cout $end
$var wire 4 C' c [3:0] $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 9 D' a [8:0] $end
$var wire 9 E' b [8:0] $end
$var wire 1 F' ct $end
$var wire 4 G' s2 [3:0] $end
$var wire 4 H' s1 [3:0] $end
$var wire 1 I' s0 $end
$var wire 1 J' cin2 $end
$var wire 1 K' cin1 $end
$var wire 1 L' cin0 $end
$var wire 10 M' c [9:0] $end
$var wire 4 N' b2 [3:0] $end
$var wire 4 O' b1 [3:0] $end
$var wire 1 P' b0 $end
$var wire 4 Q' a2 [3:0] $end
$var wire 4 R' a1 [3:0] $end
$var wire 1 S' a0 $end
$scope module adder0 $end
$var wire 1 S' a $end
$var wire 1 P' b $end
$var wire 1 L' cout $end
$var wire 1 I' s $end
$upscope $end
$scope module adder1 $end
$var wire 4 T' a [3:0] $end
$var wire 4 U' b [3:0] $end
$var wire 1 L' cin $end
$var wire 4 V' s [3:0] $end
$var wire 4 W' p [3:0] $end
$var wire 4 X' g [3:0] $end
$var wire 1 K' cout $end
$var wire 4 Y' c [3:0] $end
$upscope $end
$scope module adder2 $end
$var wire 4 Z' a [3:0] $end
$var wire 4 [' b [3:0] $end
$var wire 1 K' cin $end
$var wire 4 \' s [3:0] $end
$var wire 4 ]' p [3:0] $end
$var wire 4 ^' g [3:0] $end
$var wire 1 J' cout $end
$var wire 4 _' c [3:0] $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 4 `' a [3:0] $end
$var wire 4 a' b [3:0] $end
$var wire 1 "' cin $end
$var wire 4 b' s [3:0] $end
$var wire 4 c' p [3:0] $end
$var wire 4 d' g [3:0] $end
$var wire 1 !' cout $end
$var wire 4 e' c [3:0] $end
$upscope $end
$scope module preprocess0 $end
$var wire 8 f' data [7:0] $end
$var wire 4 g' kout [3:0] $end
$var wire 8 h' out [7:0] $end
$var wire 1 u& z $end
$var reg 8 i' dataout [7:0] $end
$var reg 4 j' k1 [3:0] $end
$var reg 1 u& z1 $end
$upscope $end
$scope module preprocess1 $end
$var wire 8 k' data [7:0] $end
$var wire 4 l' kout [3:0] $end
$var wire 8 m' out [7:0] $end
$var wire 1 t& z $end
$var reg 8 n' dataout [7:0] $end
$var reg 4 o' k1 [3:0] $end
$var reg 1 t& z1 $end
$upscope $end
$upscope $end
$scope module preprocess0 $end
$var wire 16 p' data [15:0] $end
$var wire 4 q' kout [3:0] $end
$var wire 16 r' out [15:0] $end
$var wire 1 g" zout $end
$var reg 16 s' dataout [15:0] $end
$var reg 4 t' k1 [3:0] $end
$var reg 1 g" z $end
$upscope $end
$scope module preprocess1 $end
$var wire 16 u' data [15:0] $end
$var wire 4 v' kout [3:0] $end
$var wire 16 w' out [15:0] $end
$var wire 1 f" zout $end
$var reg 16 x' dataout [15:0] $end
$var reg 4 y' k1 [3:0] $end
$var reg 1 f" z $end
$upscope $end
$scope module substrator0 $end
$var wire 18 z' a [17:0] $end
$var wire 18 {' b [17:0] $end
$var wire 18 |' b_o [17:0] $end
$var wire 1 }' ct $end
$var wire 4 ~' s5 [3:0] $end
$var wire 4 !( s4 [3:0] $end
$var wire 4 "( s3 [3:0] $end
$var wire 4 #( s2 [3:0] $end
$var wire 1 $( s1 $end
$var wire 1 %( s0 $end
$var wire 1 &( cin5 $end
$var wire 1 '( cin4 $end
$var wire 1 (( cin3 $end
$var wire 1 )( cin2 $end
$var wire 1 *( cin1 $end
$var wire 1 +( cin0 $end
$var wire 18 ,( c [17:0] $end
$var wire 4 -( b5 [3:0] $end
$var wire 4 .( b4 [3:0] $end
$var wire 4 /( b3 [3:0] $end
$var wire 4 0( b2 [3:0] $end
$var wire 1 1( b1 $end
$var wire 1 2( b0 $end
$var wire 4 3( a5 [3:0] $end
$var wire 4 4( a4 [3:0] $end
$var wire 4 5( a3 [3:0] $end
$var wire 4 6( a2 [3:0] $end
$var wire 1 7( a1 $end
$var wire 1 8( a0 $end
$scope module adder0 $end
$var wire 1 8( a $end
$var wire 1 2( b $end
$var wire 1 }' cin $end
$var wire 1 +( cout $end
$var wire 1 %( s $end
$upscope $end
$scope module adder1 $end
$var wire 1 7( a $end
$var wire 1 1( b $end
$var wire 1 +( cin $end
$var wire 1 *( cout $end
$var wire 1 $( s $end
$upscope $end
$scope module adder2 $end
$var wire 4 9( a [3:0] $end
$var wire 4 :( b [3:0] $end
$var wire 1 *( cin $end
$var wire 4 ;( s [3:0] $end
$var wire 4 <( p [3:0] $end
$var wire 4 =( g [3:0] $end
$var wire 1 )( cout $end
$var wire 4 >( c [3:0] $end
$upscope $end
$scope module adder3 $end
$var wire 4 ?( a [3:0] $end
$var wire 4 @( b [3:0] $end
$var wire 1 )( cin $end
$var wire 4 A( s [3:0] $end
$var wire 4 B( p [3:0] $end
$var wire 4 C( g [3:0] $end
$var wire 1 (( cout $end
$var wire 4 D( c [3:0] $end
$upscope $end
$scope module adder4 $end
$var wire 4 E( a [3:0] $end
$var wire 4 F( b [3:0] $end
$var wire 1 (( cin $end
$var wire 4 G( s [3:0] $end
$var wire 4 H( p [3:0] $end
$var wire 4 I( g [3:0] $end
$var wire 1 '( cout $end
$var wire 4 J( c [3:0] $end
$upscope $end
$scope module adder5 $end
$var wire 4 K( a [3:0] $end
$var wire 4 L( b [3:0] $end
$var wire 1 '( cin $end
$var wire 4 M( s [3:0] $end
$var wire 4 N( p [3:0] $end
$var wire 4 O( g [3:0] $end
$var wire 1 &( cout $end
$var wire 4 P( c [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module substrator0 $end
$var wire 15 Q( b [14:0] $end
$var wire 1 R( ct $end
$var wire 16 S( s_a [15:0] $end
$var wire 16 T( s_b [15:0] $end
$var wire 17 U( s_c [16:0] $end
$var wire 4 V( s5 [3:0] $end
$var wire 4 W( s4 [3:0] $end
$var wire 4 X( s3 [3:0] $end
$var wire 1 Y( s2 $end
$var wire 1 Z( s1 $end
$var wire 1 [( s0 $end
$var wire 1 \( cin5 $end
$var wire 1 ]( cin4 $end
$var wire 1 ^( cin3 $end
$var wire 1 _( cin2 $end
$var wire 1 `( cin1 $end
$var wire 1 a( cin0 $end
$var wire 4 b( b5 [3:0] $end
$var wire 4 c( b4 [3:0] $end
$var wire 4 d( b3 [3:0] $end
$var wire 1 e( b2 $end
$var wire 1 f( b1 $end
$var wire 1 g( b0 $end
$var wire 4 h( a5 [3:0] $end
$var wire 4 i( a4 [3:0] $end
$var wire 4 j( a3 [3:0] $end
$var wire 1 k( a2 $end
$var wire 1 l( a1 $end
$var wire 1 m( a0 $end
$var wire 15 n( a [14:0] $end
$scope module adder0 $end
$var wire 1 m( a $end
$var wire 1 g( b $end
$var wire 1 R( cin $end
$var wire 1 a( cout $end
$var wire 1 [( s $end
$upscope $end
$scope module adder1 $end
$var wire 1 l( a $end
$var wire 1 f( b $end
$var wire 1 a( cin $end
$var wire 1 `( cout $end
$var wire 1 Z( s $end
$upscope $end
$scope module adder2 $end
$var wire 1 k( a $end
$var wire 1 e( b $end
$var wire 1 `( cin $end
$var wire 1 _( cout $end
$var wire 1 Y( s $end
$upscope $end
$scope module adder3 $end
$var wire 4 o( a [3:0] $end
$var wire 4 p( b [3:0] $end
$var wire 1 _( cin $end
$var wire 4 q( s [3:0] $end
$var wire 4 r( p [3:0] $end
$var wire 4 s( g [3:0] $end
$var wire 1 ^( cout $end
$var wire 4 t( c [3:0] $end
$upscope $end
$scope module adder4 $end
$var wire 4 u( a [3:0] $end
$var wire 4 v( b [3:0] $end
$var wire 1 ^( cin $end
$var wire 4 w( s [3:0] $end
$var wire 4 x( p [3:0] $end
$var wire 4 y( g [3:0] $end
$var wire 1 ]( cout $end
$var wire 4 z( c [3:0] $end
$upscope $end
$scope module adder5 $end
$var wire 4 {( a [3:0] $end
$var wire 4 |( b [3:0] $end
$var wire 1 ]( cin $end
$var wire 4 }( s [3:0] $end
$var wire 4 ~( p [3:0] $end
$var wire 4 !) g [3:0] $end
$var wire 1 \( cout $end
$var wire 4 ") c [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ")
bx !)
bx ~(
bx }(
bx |(
bx {(
bx z(
bx y(
bx x(
bx w(
bx v(
bx u(
bx t(
bx s(
bx r(
bx q(
bx p(
bx o(
bx n(
xm(
xl(
xk(
bx j(
bx i(
bx h(
xg(
xf(
xe(
bx d(
bx c(
bx b(
xa(
x`(
x_(
x^(
x](
x\(
x[(
xZ(
xY(
bx X(
bx W(
bx V(
bx U(
bx T(
bx S(
1R(
bx Q(
bx P(
bx O(
b1xxx N(
bx M(
b1xxx L(
bx K(
bx J(
bx I(
bx H(
bx G(
bx F(
bx E(
bx D(
bx C(
bx B(
bx A(
bx @(
bx ?(
bx >(
bx =(
bx <(
bx ;(
bx :(
bx 9(
x8(
x7(
bx 6(
bx 5(
bx 4(
bx 3(
x2(
x1(
bx 0(
bx /(
bx .(
b1xxx -(
bx ,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
bx #(
bx "(
bx !(
bx ~'
1}'
b0xxxxxxxxxxxxxxxxx |'
b1xxxxxxxxxxxxxxxxx {'
bx z'
bx y'
bx x'
bx w'
bx v'
bx u'
bx t'
bx s'
bx r'
bx q'
bx p'
bx o'
bx n'
bx m'
bx l'
bx k'
bx j'
bx i'
bx h'
bx g'
bx f'
bx e'
bx d'
bx c'
bx b'
bx a'
bx `'
bx _'
b0 ^'
b1xxx ]'
bx \'
b0 ['
b1xxx Z'
bx Y'
bx X'
bx W'
bx V'
bx U'
bx T'
0S'
bx R'
b1xxx Q'
xP'
bx O'
b0 N'
bx M'
0L'
xK'
xJ'
xI'
bx H'
bx G'
0F'
b0xxxxx E'
b1xxxxxxx0 D'
bx C'
bx B'
bx A'
bx @'
bx ?'
bx >'
bx0 ='
bx0 <'
bx0 ;'
bx0 :'
bx0 9'
bx0 8'
bx0 7'
bx 6'
bx0 5'
bx 4'
bx0 3'
x2'
x1'
bx0 0'
bx /'
0.'
bx0 -'
bx0 ,'
x+'
bx0 *'
bx )'
bx ('
bx0 ''
bx &'
bx0 %'
bx $'
bx #'
x"'
x!'
bx ~&
bx }&
bx |&
bx {&
b0xxxxx z&
bx y&
bx x&
bx0 w&
b1xxxxxxx0 v&
xu&
xt&
xs&
bx r&
bx q&
bx p&
bx o&
bx n&
bx m&
bx l&
bx k&
bx j&
bx i&
bx h&
bx g&
bx f&
bx e&
bx d&
bx c&
bx b&
bx a&
bx `&
b0 _&
b1xxx ^&
bx ]&
b0 \&
b1xxx [&
bx Z&
bx Y&
bx X&
bx W&
bx V&
bx U&
0T&
bx S&
b1xxx R&
xQ&
bx P&
b0 O&
bx N&
0M&
xL&
xK&
xJ&
bx I&
bx H&
0G&
b0xxxxx F&
b1xxxxxxx0 E&
bx D&
bx C&
bx B&
bx A&
bx @&
bx ?&
bx0 >&
bx0 =&
bx0 <&
bx0 ;&
bx0 :&
bx0 9&
bx0 8&
bx 7&
bx0 6&
bx 5&
bx0 4&
x3&
x2&
bx0 1&
bx 0&
0/&
bx0 .&
bx0 -&
x,&
bx0 +&
bx *&
bx )&
bx0 (&
bx '&
bx0 &&
bx %&
bx $&
x#&
x"&
bx !&
bx ~%
bx }%
bx |%
b0xxxxx {%
bx z%
bx y%
bx0 x%
b1xxxxxxx0 w%
xv%
xu%
xt%
bx s%
bx r%
bx q%
bx p%
bx o%
bx n%
bx m%
bx l%
bx k%
bx j%
bx i%
bx h%
bx g%
bx f%
bx e%
bx d%
bx c%
bx b%
bx a%
b0 `%
b1xxx _%
bx ^%
b0 ]%
b1xxx \%
bx [%
bx Z%
bx Y%
bx X%
bx W%
bx V%
0U%
xT%
bx S%
b1xxx R%
xQ%
xP%
bx O%
b0 N%
bx M%
0L%
xK%
xJ%
xI%
xH%
xG%
bx F%
bx E%
0D%
b0xxxxxx C%
b1xxxxxxxx0 B%
bx A%
bx @%
bx ?%
bx >%
bx =%
bx <%
bx ;%
bx :%
bx 9%
bx 8%
bx 7%
bx 6%
05%
bx 4%
bx 3%
02%
bx 1%
bx 0%
bx0 /%
0.%
x-%
x,%
0+%
bx *%
bx )%
0(%
bx0 '%
bx0 &%
x%%
bx0 $%
bx #%
bx "%
bx0 !%
bx ~$
bx0 }$
bx |$
bx {$
xz$
xy$
bx x$
bx w$
bx v$
bx u$
b0xxxxxx t$
bx s$
bx r$
bx0 q$
b1xxxxxxxx0 p$
xo$
xn$
xm$
bx l$
bx k$
bx j$
bx i$
bx h$
bx g$
0f$
bx e$
bx d$
bx c$
b0 b$
bx a$
bx `$
b0 _$
bx ^$
bx ]$
b0xx \$
bx [$
bx Z$
b0xx Y$
bx X$
bx W$
bx V$
bx U$
bx T$
bx S$
bx R$
bx Q$
bx P$
bx O$
bx N$
bx M$
bx L$
bx K$
bx J$
bx I$
bx H$
bx G$
bx F$
b0xx E$
b0 D$
bx C$
xB$
xA$
x@$
x?$
bx >$
bx =$
bx <$
bx ;$
0:$
b0xxxxxxxxxx 9$
bx 8$
bx 7$
bx 6$
bx 5$
bx 4$
bx 3$
bx 2$
bx 1$
bx 0$
bx /$
bx .$
bx -$
bx ,$
bx +$
bx *$
bx )$
bx ($
bx '$
bx &$
bx %$
bx $$
bx #$
bx "$
bx !$
bx ~#
bx }#
bx |#
bx {#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
xt#
xs#
xr#
xq#
bx p#
bx o#
bx n#
bx m#
0l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
bx Y#
xX#
xW#
bx V#
bx U#
0T#
bx S#
bx R#
bx Q#
bx P#
bx O#
bx N#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
x@#
x?#
bx >#
bx =#
0<#
bx ;#
bx :#
bx 9#
b0xxxxxxxxxx 8#
bx 7#
b0xxxxxxxxxxxxxxxxx 6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
x,#
x+#
bx *#
x)#
bx (#
x'#
bx &#
x%#
bx $#
x##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
b0xxxxxxxxxxxxxxxxx r"
bx q"
bx p"
bx o"
bx n"
xm"
bx l"
bx k"
bx j"
b0xxxxxxxxxx i"
bx h"
xg"
xf"
xe"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
b0xxxxxxxxxxxxxxxx J"
bx I"
bx H"
bx G"
bx F"
b0xxxxxxxxxxxxxxxx E"
bx D"
bx C"
bx B"
bx A"
x@"
x?"
x>"
x="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
05"
b0 4"
b0 3"
bx 2"
bx 1"
bx 0"
b0 /"
b0 ."
b0 -"
bx ,"
bx +"
bx *"
b0 )"
b0 ("
b0 '"
bx &"
bx %"
bx $"
b0 #"
b0 ""
0!"
0~
0}
b0 |
b0 {
b0 z
bx y
xx
xw
xv
bx u
bx t
bx s
0r
0q
0p
0o
0n
0m
xl
xk
xj
bx i
bx h
bx g
bx f
bx e
b0 d
bx c
bx b
bx a
x`
x_
bx ^
x]
bx \
x[
bx Z
xY
bx X
xW
bx V
xU
bx T
xS
bx R
xQ
bx P
bx O
bx N
bx M
xL
xK
xJ
bx I
xH
xG
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
b0 9
bx 8
bx 7
x6
b0x 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
b0 ,
b0 +
z*
z)
b0 (
b0 '
0&
1%
b0x $
bx #
bx "
bz !
$end
#5000000
0%
#10000000
b11111111 (
b11111111 ,
b11000101 '
b11000101 +
1\(
b1111 ")
1](
b1111 z(
1^(
16
b0 "
b0 3
b1 #
b1 4
b1111 t(
1_(
b0 9"
b0 _"
b0 :"
b0 Y"
b0 /
b0 ;"
b0 S"
0="
0>"
0?"
b0 .
0@"
1`(
b0 b"
b0 \"
b0 V"
b0 P"
b0 <"
b0 M"
b0 g
b0 1"
b0 h
b0 +"
b0 i
b0 %"
b1111 ~(
b1111 x(
b1111 r(
1a(
b0 a"
b0 `"
b0 ["
b0 Z"
b0 U"
b0 T"
b0 O"
b0 N"
b0 2"
b0 ,"
b0 &"
0j
0k
0l
b0 :
b0 f
b1111 b(
b1111 |(
b1111 c(
b1111 v(
b1111 d(
b1111 p(
1e(
1f(
1g(
b0 F"
b0 ]"
b0 G"
b0 W"
b0 H"
b0 Q"
b0 I"
b0 K"
b0 1
b0 8"
b0 A"
b0 ^"
b0 B"
b0 X"
b0 C"
b0 R"
b0 D"
b0 L"
1e"
b0 s
b0 0"
b0 t
b0 *"
b0 u
b0 $"
0v
0w
0x
b111111111111111 Q(
b0 J"
b0 E"
b0 v"
b0 w'
b0 x'
1f"
b0 n"
b0 v'
b0 y'
b0 y
0]
b0 ^
b0 6"
b0 \
b0 7"
0[
b0 Z
0Y
b0 X
0W
b0 V
0U
b0 T
0S
b0 R
0Q
b0 P
0`
b0 N
0G
0H
b0 I
0J
b0 F
b0 M
b0 =
b0 <
b0 d"
b0 u'
b0 ;
b0 e
b0 T(
b0 a
1%
#15000000
0%
#20000000
b0xxxxxxx0 w&
b0xxxxxxx0 3'
01'
b0xxxxxxx0 x%
b0xxxxxxx0 4&
02&
b0 C'
b0 D&
b0xxxx q"
0m"
02'
03&
b0 ='
b0 U#
b0 f#
b0 >&
0W#
0X#
b0 B'
b0 <'
b0 i#
b0 c#
b0 C&
b0 =&
b0 j$
b0 u"
b0 Y#
b0 V#
b0 `#
b0 4'
b0 ?'
b0 5'
b0 9'
b0 h#
b0 g#
b0 b#
b0 a#
b0 5&
b0 @&
b0 6&
b0 :&
b0 i$
b0 %'
b0 -'
1s&
b0 &&
b0 .&
1t%
b0 Z#
b0 e#
b0 [#
b0 _#
b0 $'
b0 m'
b0 n'
1t&
b0 {&
b0 l'
b0 o'
b0 \#
b0 d#
b0 ]#
b0 ^#
b0 %&
b0 n&
b0 o&
1u%
b0 |%
b0 m&
b0 p&
1##
b0 "#
b0 e$
b0 }"
b0 S#
b0 r&
b0 k'
b0 |"
b0 R#
b0 s%
b0 l&
b1 a
b0 $
b0 5
0K
0_
0L
1%
#25000000
0%
#30000000
b10001110 (
b10001110 ,
b1 '
b1 +
b0xxxxxxxx0 q$
b0xxxxxxxx0 /%
0,%
b0 A%
0-%
b0 ;%
bx0 Y'
bx0 Z&
b0 @%
b0 :%
bx0x0 X'
b1x1x W'
bx0x0 Y&
b1x1x X&
bx1 #'
bx1 M'
1I'
bx1 $&
bx1 N&
1J&
b0 0%
b0 =%
b0 1%
b0 7%
b0 t"
b0 y&
b1010 O'
b1010 U'
1P'
b0 w"
b0 z%
b1010 P&
b1010 V&
1Q&
b0 }$
b0 '%
1m$
b0 d'
b10101 z&
b10101 E'
1"'
b0 e&
b10101 {%
b10101 F&
1#&
b0 |$
b0 o%
b0 p%
1n$
b0 u$
b0 n%
b0 q%
b0 x&
b0 y%
1L
b0 a
1%#
b0xxxx ~"
b0 5#
b0 l$
b0 m%
1+'
b0 )'
b0 a'
b0xxxxxxx0 *'
1,&
b0 *&
b0 b&
b0xxxxxxx0 +&
1%
#35000000
0%
#40000000
b0 (
b0 ,
b111100 '
b111100 +
x\(
x^(
bx ")
x](
b0 m#
b0 4$
b0 n#
b0 .$
b0 o#
b0 ($
bx z(
bx t(
0q#
0r#
0s#
0t#
bx0x0 Z%
b1x1x Y%
b0 7$
b0 1$
b0 +$
b0 %$
b11 h
b11 +"
b1 i
b1 %"
b110001110 :
b110001110 f
bx00 y(
b11xx x(
bx0 s(
b111x r(
x_(
x`(
bx0 {$
bx0 M%
0H%
b0 r"
b0 s"
b0 u#
b0 p#
b0 "$
b11 ,"
b1 &"
1j
1k
b0 h"
b0 s$
b1010 O%
b1010 W%
1P%
0Q%
b0 6$
b0 5$
b0 0$
b0 /$
b0 *$
b0 )$
b0 $$
b0 #$
b1100 c(
b1100 v(
b1110 d(
b1110 p(
0e(
0f(
b0 f%
b101010 t$
b101010 C%
1z$
b1 "
b1 3
b10001111 #
b10001111 4
b11 t
b11 *"
b1 u
b1 $"
1v
1w
b111111001110001 Q(
b0 r$
b0 v#
b0 3$
b0 w#
b0 -$
b0 x#
b0 '$
b0 y#
b0 !$
b0 z#
b0 2$
b0 {#
b0 ,$
b0 |#
b0 &$
b0 }#
b0 ~#
b110001110 /
b110001110 y
1%%
b0 #%
b0 c%
b0xxxxxxxx0 $%
1'#
b0xxxx $#
b0 1#
b0 k#
b0 -#
b0 j#
b110001110 ;
b110001110 e
b110001110 T(
b1 M
b1 a
0L
1%
#45000000
0%
#50000000
b1 (
b1 ,
b1 '
b1 +
1&(
b1111 P(
b0 ~'
b0 M(
1\(
1'(
b1111 ")
b1111 J(
b0 !(
b0 G(
1](
1((
b0 i"
b1111 z(
b1111 D(
b0 "(
b0 A(
1^(
1)(
b1111 t(
1_(
b1111 >(
b0 #(
b0 ;(
1*(
b0 h
b0 +"
b0 i
b0 %"
b0 :
b0 f
bx y(
b1111 x(
bx s(
b1111 r(
1`(
b0 ,"
b0 &"
0j
0k
b1111 N(
b1111 H(
b1111 B(
b1111 <(
0$(
b0 j"
b0 ,(
0%(
1+(
b1111 c(
b1111 v(
b1111 d(
b1111 p(
1e(
1f(
b0 O(
b0 I(
b0 C(
b0 =(
b0 "
b0 3
b1 #
b1 4
b0 t
b0 *"
b0 u
b0 $"
0v
0w
b111111111111111 Q(
b1111 -(
b1111 L(
b1111 .(
b1111 F(
b1111 /(
b1111 @(
b1111 0(
b1111 :(
11(
12(
b0 /
b0 y
b111111111111111111 {'
b0 3(
b0 K(
b0 4(
b0 E(
b0 5(
b0 ?(
b0 6(
b0 9(
07(
08(
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1)#
b0xxxx &#
b0 2#
b0 .#
b0 6#
b0 |'
b0 9#
b0 z'
1%
#55000000
0%
#60000000
b10 '
b10 +
x\(
x^(
bx ")
x](
bx t(
x_(
b0 ;$
b0 `$
0?$
0@$
b0 <$
b0 Z$
b0 =$
b0 T$
bx z(
x`(
b0 c$
0A$
0B$
b0 ]$
b0 W$
b0 Q$
b10 h
b10 +"
bx0x y(
b11x1 x(
xa(
b0 k"
b0 C$
b0 >$
b0 N$
b10 ,"
b100000001 :
b100000001 f
b0 a$
b0 \$
b0 [$
b0 V$
b0 U$
b0 P$
b0 O$
1l
b1101 c(
b1101 v(
0g(
b1 "
b1 3
b10 t
b10 *"
1x
b111111011111110 Q(
b0 H$
b0 ^$
b0 I$
b0 X$
b0 J$
b0 R$
b0 K$
b0 L$
b0 E$
b0 Y$
b0 F$
b0 S$
b0 G$
b0 M$
b100000001 /
b100000001 y
1+#
b0xxxx (#
b0 3#
b0 /#
b0 8$
b0 8#
b0 9$
b100000001 ;
b100000001 e
b100000001 T(
b1 M
b1 a
0L
1%
#65000000
0%
#70000000
b11 '
b11 +
1\(
b1111 ")
1](
b1111 z(
1^(
b1111 t(
1_(
1`(
b0 h
b0 +"
bx y(
b1111 x(
1a(
b0 ,"
b0 :
b0 f
0l
b1111 c(
b1111 v(
1g(
b0 7
b0 "
b0 3
b0 t
b0 *"
0x
b111111111111111 Q(
b0 0
b0 l"
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1,#
b0xxxx *#
b0 4#
b0 7#
1%
#75000000
0%
#80000000
b100 '
b100 +
x\(
x^(
bx ")
x](
bx t(
x_(
bx z(
x`(
b110 h
b110 +"
bx00x y(
b1xx1 x(
xa(
b110 ,"
b1100000001 :
b1100000001 f
1l
b1001 c(
b1001 v(
0g(
b11 "
b11 3
b110 t
b110 *"
1x
b111110011111110 Q(
b1100000001 /
b1100000001 y
b1100000001 ;
b1100000001 e
b1100000001 T(
b1 M
b1 a
0L
1%
#85000000
0%
#90000000
b101 '
b101 +
1\(
b1111 ")
1](
b1111 z(
1^(
b1111 t(
1_(
1`(
b0 h
b0 +"
bx y(
b1111 x(
1a(
b0 ,"
b0 :
b0 f
0l
b1111 c(
b1111 v(
1g(
b0 "
b0 3
b0 t
b0 *"
0x
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#95000000
0%
#100000000
b110 '
b110 +
x^(
x\(
bx t(
bx ")
x_(
x](
bx z(
x`(
b1010 h
b1010 +"
b0x0x y(
bx1x1 x(
xa(
b1010 ,"
b10100000001 :
b10100000001 f
1l
b101 c(
b101 v(
0g(
b101 "
b101 3
b1010 t
b1010 *"
1x
b111101011111110 Q(
b10100000001 /
b10100000001 y
b10100000001 ;
b10100000001 e
b10100000001 T(
b1 M
b1 a
0L
1%
#105000000
0%
#110000000
b111 '
b111 +
1\(
b1111 ")
1](
b1111 z(
1^(
b1111 t(
1_(
1`(
b0 h
b0 +"
bx y(
b1111 x(
1a(
b0 ,"
b0 :
b0 f
0l
b1111 c(
b1111 v(
1g(
b0 "
b0 3
b0 t
b0 *"
0x
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#115000000
0%
#120000000
b10000 '
b10000 +
x^(
x\(
bx t(
bx ")
x_(
x](
bx z(
x`(
b1110 h
b1110 +"
b0x y(
bx1 x(
xa(
b1110 ,"
b11100000001 :
b11100000001 f
1l
b1 c(
b1 v(
0g(
b111 "
b111 3
b1110 t
b1110 *"
1x
b111100011111110 Q(
b11100000001 /
b11100000001 y
b11100000001 ;
b11100000001 e
b11100000001 T(
b1 M
b1 a
0L
1%
#125000000
0%
#130000000
b11100000 '
b11100000 +
1\(
b1111 ")
1](
b1111 z(
1^(
b1111 t(
1_(
1`(
b0 h
b0 +"
bx y(
b1111 x(
1a(
b0 ,"
b0 :
b0 f
0l
b1111 c(
b1111 v(
1g(
b0 "
b0 3
b0 t
b0 *"
0x
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#135000000
0%
#140000000
x](
bx z(
x^(
bx t(
x_(
x\(
bx ")
x`(
b1100 g
b1100 1"
b0xx !)
bx11 ~(
xa(
b1100 2"
1l
b11110000000000001 :
b11110000000000001 f
b11 b(
b11 |(
0g(
b11100000 "
b11100000 3
b1100 s
b1100 0"
1x
b1111111111110 Q(
b1110000000000001 /
b110000000000001 y
b1110000000000001 ;
b1110000000000001 e
b1110000000000001 T(
b1 M
b1 a
0L
1%
#145000000
0%
#150000000
1\(
b1111 ")
1](
b1111 z(
1^(
b1111 t(
1_(
1`(
b0 g
b0 1"
bx !)
b1111 ~(
1a(
b0 2"
0l
b0 :
b0 f
b1111 b(
b1111 |(
1g(
b0 "
b0 3
b0 s
b0 0"
0x
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#155000000
0%
#160000000
b0 (
b0 ,
b0 '
b0 +
x](
bx z(
x^(
bx t(
x_(
x\(
bx ")
x`(
b1100 g
b1100 1"
b0xx !)
bx11 ~(
xa(
b1100 2"
1l
b11110000000000001 :
b11110000000000001 f
b11 b(
b11 |(
0g(
b11100000 "
b11100000 3
b1100 s
b1100 0"
1x
b1111111111110 Q(
b1110000000000001 /
b110000000000001 y
b1110000000000001 ;
b1110000000000001 e
b1110000000000001 T(
b1 M
b1 a
0L
1%
#165000000
0%
#170000000
b1000 '
b1000 +
1\(
b1111 ")
1](
b1111 z(
1^(
b1111 t(
1_(
1`(
b0 g
b0 1"
bx !)
b1111 ~(
1a(
b0 2"
0l
b0 :
b0 f
b1111 b(
b1111 |(
1g(
b0 "
b0 3
b0 s
b0 0"
0x
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#175000000
0%
#180000000
b10000 '
b10000 +
x\(
bx ")
b100000000000 :
b100000000000 f
b1 g
b1 1"
bx0 !)
b111x ~(
b1 2"
b1110 b(
b1110 |(
b1000 "
b1000 3
b1 s
b1 0"
b111011111111111 Q(
b100000000000 /
b100000000000 y
b100000000000 ;
b100000000000 e
b100000000000 T(
b1 M
b1 a
0L
1%
#185000000
0%
#190000000
b11000 '
b11000 +
1\(
b1111 ")
b0 :
b0 f
b0 g
b0 1"
bx !)
b1111 ~(
b0 2"
b1111 b(
b1111 |(
b0 "
b0 3
b0 s
b0 0"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#195000000
0%
#200000000
b100000 '
b100000 +
x\(
bx ")
b1100000000000 :
b1100000000000 f
b11 g
b11 1"
bx00 !)
b11xx ~(
b11 2"
b1100 b(
b1100 |(
b11000 "
b11000 3
b11 s
b11 0"
b110011111111111 Q(
b1100000000000 /
b1100000000000 y
b1100000000000 ;
b1100000000000 e
b1100000000000 T(
b1 M
b1 a
0L
1%
#205000000
0%
#210000000
b101000 '
b101000 +
1\(
b1111 ")
b0 :
b0 f
b0 g
b0 1"
bx !)
b1111 ~(
b0 2"
b1111 b(
b1111 |(
b0 "
b0 3
b0 s
b0 0"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#215000000
0%
#220000000
b110000 '
b110000 +
x\(
bx ")
b10100000000000 :
b10100000000000 f
b101 g
b101 1"
bx0x0 !)
b1x1x ~(
b101 2"
b1010 b(
b1010 |(
b101000 "
b101000 3
b101 s
b101 0"
b101011111111111 Q(
b10100000000000 /
b10100000000000 y
b10100000000000 ;
b10100000000000 e
b10100000000000 T(
b1 M
b1 a
0L
1%
#225000000
0%
#230000000
b111000 '
b111000 +
1\(
b1111 ")
b0 :
b0 f
b0 g
b0 1"
bx !)
b1111 ~(
b0 2"
b1111 b(
b1111 |(
b0 "
b0 3
b0 s
b0 0"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#235000000
0%
#240000000
b10001000 '
b10001000 +
x\(
bx ")
b11100000000000 :
b11100000000000 f
b111 g
b111 1"
bx000 !)
b1xxx ~(
b111 2"
b1000 b(
b1000 |(
b111000 "
b111000 3
b111 s
b111 0"
b100011111111111 Q(
b11100000000000 /
b11100000000000 y
b11100000000000 ;
b11100000000000 e
b11100000000000 T(
b1 M
b1 a
0L
1%
#245000000
0%
#250000000
b0 '
b0 +
1\(
b1111 ")
b0 :
b0 f
b0 g
b0 1"
bx !)
b1111 ~(
b0 2"
b1111 b(
b1111 |(
b0 "
b0 3
b0 s
b0 0"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#255000000
0%
#260000000
b1 '
b1 +
b1 M
b1 a
0L
1%
#265000000
0%
#270000000
b10 '
b10 +
1L
b0 M
b0 a
1%
#275000000
0%
#280000000
b11 '
b11 +
x\(
bx ")
x](
bx11 z(
b1000000000 :
b1000000000 f
b100 h
b100 +"
bx0xx y(
b1x11 x(
b100 ,"
b1011 c(
b1011 v(
b10 "
b10 3
b100 t
b100 *"
b111110111111111 Q(
b1000000000 /
b1000000000 y
b1000000000 ;
b1000000000 e
b1000000000 T(
b1 M
b1 a
0L
1%
#285000000
0%
#290000000
b100 '
b100 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 h
b0 +"
bx y(
b1111 x(
b0 ,"
b1111 c(
b1111 v(
b0 "
b0 3
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#295000000
0%
#300000000
b101 '
b101 +
x\(
bx ")
x](
bx111 z(
b10000000000 :
b10000000000 f
b1000 h
b1000 +"
b0xxx y(
bx111 x(
b1000 ,"
b111 c(
b111 v(
b100 "
b100 3
b1000 t
b1000 *"
b111101111111111 Q(
b10000000000 /
b10000000000 y
b10000000000 ;
b10000000000 e
b10000000000 T(
b1 M
b1 a
0L
1%
#305000000
0%
#310000000
b110 '
b110 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 h
b0 +"
bx y(
b1111 x(
b0 ,"
b1111 c(
b1111 v(
b0 "
b0 3
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#315000000
0%
#320000000
b111 '
b111 +
x\(
bx ")
x](
bx11 z(
b11000000000 :
b11000000000 f
b1100 h
b1100 +"
b0xx y(
bx11 x(
b1100 ,"
b11 c(
b11 v(
b110 "
b110 3
b1100 t
b1100 *"
b111100111111111 Q(
b11000000000 /
b11000000000 y
b11000000000 ;
b11000000000 e
b11000000000 T(
b1 M
b1 a
0L
1%
#325000000
0%
#330000000
b1000 '
b1000 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 h
b0 +"
bx y(
b1111 x(
b0 ,"
b1111 c(
b1111 v(
b0 "
b0 3
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#335000000
0%
#340000000
b1001 '
b1001 +
x\(
bx ")
b100000000000 :
b100000000000 f
b1 g
b1 1"
bx0 !)
b111x ~(
b1 2"
b1110 b(
b1110 |(
b1000 "
b1000 3
b1 s
b1 0"
b111011111111111 Q(
b100000000000 /
b100000000000 y
b100000000000 ;
b100000000000 e
b100000000000 T(
b1 M
b1 a
0L
1%
#345000000
0%
#350000000
b1010 '
b1010 +
1\(
b1111 ")
b0 :
b0 f
b0 g
b0 1"
bx !)
b1111 ~(
b0 2"
b1111 b(
b1111 |(
b0 "
b0 3
b0 s
b0 0"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#355000000
0%
#360000000
b1011 '
b1011 +
x\(
x](
bx ")
bx11 z(
b101000000000 :
b101000000000 f
b1 g
b1 1"
b100 h
b100 +"
bx0 !)
b111x ~(
bx0xx y(
b1x11 x(
b1 2"
b100 ,"
b1110 b(
b1110 |(
b1011 c(
b1011 v(
b1010 "
b1010 3
b1 s
b1 0"
b100 t
b100 *"
b111010111111111 Q(
b101000000000 /
b101000000000 y
b101000000000 ;
b101000000000 e
b101000000000 T(
b1 M
b1 a
0L
1%
#365000000
0%
#370000000
b1100 '
b1100 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 g
b0 1"
b0 h
b0 +"
bx !)
b1111 ~(
bx y(
b1111 x(
b0 2"
b0 ,"
b1111 b(
b1111 |(
b1111 c(
b1111 v(
b0 "
b0 3
b0 s
b0 0"
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#375000000
0%
#380000000
b1101 '
b1101 +
x\(
x](
bx ")
bx111 z(
b110000000000 :
b110000000000 f
b1 g
b1 1"
b1000 h
b1000 +"
bx0 !)
b111x ~(
b0xxx y(
bx111 x(
b1 2"
b1000 ,"
b1110 b(
b1110 |(
b111 c(
b111 v(
b1100 "
b1100 3
b1 s
b1 0"
b1000 t
b1000 *"
b111001111111111 Q(
b110000000000 /
b110000000000 y
b110000000000 ;
b110000000000 e
b110000000000 T(
b1 M
b1 a
0L
1%
#385000000
0%
#390000000
b1110 '
b1110 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 g
b0 1"
b0 h
b0 +"
bx !)
b1111 ~(
bx y(
b1111 x(
b0 2"
b0 ,"
b1111 b(
b1111 |(
b1111 c(
b1111 v(
b0 "
b0 3
b0 s
b0 0"
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#395000000
0%
#400000000
b1111 '
b1111 +
x\(
x](
bx ")
bx11 z(
b111000000000 :
b111000000000 f
b1 g
b1 1"
b1100 h
b1100 +"
bx0 !)
b111x ~(
b0xx y(
bx11 x(
b1 2"
b1100 ,"
b1110 b(
b1110 |(
b11 c(
b11 v(
b1110 "
b1110 3
b1 s
b1 0"
b1100 t
b1100 *"
b111000111111111 Q(
b111000000000 /
b111000000000 y
b111000000000 ;
b111000000000 e
b111000000000 T(
b1 M
b1 a
0L
1%
#405000000
0%
#410000000
b10000 '
b10000 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 g
b0 1"
b0 h
b0 +"
bx !)
b1111 ~(
bx y(
b1111 x(
b0 2"
b0 ,"
b1111 b(
b1111 |(
b1111 c(
b1111 v(
b0 "
b0 3
b0 s
b0 0"
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#415000000
0%
#420000000
b10001 '
b10001 +
x\(
bx1 ")
b1000000000000 :
b1000000000000 f
b10 g
b10 1"
bx0x !)
b11x1 ~(
b10 2"
b1101 b(
b1101 |(
b10000 "
b10000 3
b10 s
b10 0"
b110111111111111 Q(
b1000000000000 /
b1000000000000 y
b1000000000000 ;
b1000000000000 e
b1000000000000 T(
b1 M
b1 a
0L
1%
#425000000
0%
#430000000
b10010 '
b10010 +
1\(
b1111 ")
b0 :
b0 f
b0 g
b0 1"
bx !)
b1111 ~(
b0 2"
b1111 b(
b1111 |(
b0 "
b0 3
b0 s
b0 0"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#435000000
0%
#440000000
b10011 '
b10011 +
x\(
x](
bx ")
bx11 z(
b1001000000000 :
b1001000000000 f
b10 g
b10 1"
b100 h
b100 +"
bx0x !)
b11x1 ~(
bx0xx y(
b1x11 x(
b10 2"
b100 ,"
b1101 b(
b1101 |(
b1011 c(
b1011 v(
b10010 "
b10010 3
b10 s
b10 0"
b100 t
b100 *"
b110110111111111 Q(
b1001000000000 /
b1001000000000 y
b1001000000000 ;
b1001000000000 e
b1001000000000 T(
b1 M
b1 a
0L
1%
#445000000
0%
#450000000
b10100 '
b10100 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 g
b0 1"
b0 h
b0 +"
bx !)
b1111 ~(
bx y(
b1111 x(
b0 2"
b0 ,"
b1111 b(
b1111 |(
b1111 c(
b1111 v(
b0 "
b0 3
b0 s
b0 0"
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#455000000
0%
#460000000
b10101 '
b10101 +
x\(
x](
bx ")
bx111 z(
b1010000000000 :
b1010000000000 f
b10 g
b10 1"
b1000 h
b1000 +"
bx0x !)
b11x1 ~(
b0xxx y(
bx111 x(
b10 2"
b1000 ,"
b1101 b(
b1101 |(
b111 c(
b111 v(
b10100 "
b10100 3
b10 s
b10 0"
b1000 t
b1000 *"
b110101111111111 Q(
b1010000000000 /
b1010000000000 y
b1010000000000 ;
b1010000000000 e
b1010000000000 T(
b1 M
b1 a
0L
1%
#465000000
0%
#470000000
b10110 '
b10110 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 g
b0 1"
b0 h
b0 +"
bx !)
b1111 ~(
bx y(
b1111 x(
b0 2"
b0 ,"
b1111 b(
b1111 |(
b1111 c(
b1111 v(
b0 "
b0 3
b0 s
b0 0"
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#475000000
0%
#480000000
b10111 '
b10111 +
x\(
x](
bx ")
bx11 z(
b1011000000000 :
b1011000000000 f
b10 g
b10 1"
b1100 h
b1100 +"
bx0x !)
b11x1 ~(
b0xx y(
bx11 x(
b10 2"
b1100 ,"
b1101 b(
b1101 |(
b11 c(
b11 v(
b10110 "
b10110 3
b10 s
b10 0"
b1100 t
b1100 *"
b110100111111111 Q(
b1011000000000 /
b1011000000000 y
b1011000000000 ;
b1011000000000 e
b1011000000000 T(
b1 M
b1 a
0L
1%
#485000000
0%
#490000000
b11000 '
b11000 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 g
b0 1"
b0 h
b0 +"
bx !)
b1111 ~(
bx y(
b1111 x(
b0 2"
b0 ,"
b1111 b(
b1111 |(
b1111 c(
b1111 v(
b0 "
b0 3
b0 s
b0 0"
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#495000000
0%
#500000000
b11001 '
b11001 +
x\(
bx ")
b1100000000000 :
b1100000000000 f
b11 g
b11 1"
bx00 !)
b11xx ~(
b11 2"
b1100 b(
b1100 |(
b11000 "
b11000 3
b11 s
b11 0"
b110011111111111 Q(
b1100000000000 /
b1100000000000 y
b1100000000000 ;
b1100000000000 e
b1100000000000 T(
b1 M
b1 a
0L
1%
#505000000
0%
#510000000
b11010 '
b11010 +
1\(
b1111 ")
b0 :
b0 f
b0 g
b0 1"
bx !)
b1111 ~(
b0 2"
b1111 b(
b1111 |(
b0 "
b0 3
b0 s
b0 0"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#515000000
0%
#520000000
b11011 '
b11011 +
x\(
x](
bx ")
bx11 z(
b1101000000000 :
b1101000000000 f
b11 g
b11 1"
b100 h
b100 +"
bx00 !)
b11xx ~(
bx0xx y(
b1x11 x(
b11 2"
b100 ,"
b1100 b(
b1100 |(
b1011 c(
b1011 v(
b11010 "
b11010 3
b11 s
b11 0"
b100 t
b100 *"
b110010111111111 Q(
b1101000000000 /
b1101000000000 y
b1101000000000 ;
b1101000000000 e
b1101000000000 T(
b1 M
b1 a
0L
1%
#525000000
0%
#530000000
b11100 '
b11100 +
1\(
b1111 ")
1](
b1111 z(
b0 :
b0 f
b0 g
b0 1"
b0 h
b0 +"
bx !)
b1111 ~(
bx y(
b1111 x(
b0 2"
b0 ,"
b1111 b(
b1111 |(
b1111 c(
b1111 v(
b0 "
b0 3
b0 s
b0 0"
b0 t
b0 *"
b111111111111111 Q(
b0 /
b0 y
1L
b0 M
b0 ;
b0 e
b0 T(
b0 a
1%
#535000000
0%
#540000000
x\(
x](
bx ")
bx111 z(
b1110000000000 :
b1110000000000 f
b11 g
b11 1"
b1000 h
b1000 +"
bx00 !)
b11xx ~(
b0xxx y(
bx111 x(
b11 2"
b1000 ,"
b1100 b(
b1100 |(
b111 c(
b111 v(
b11100 "
b11100 3
b11 s
b11 0"
b1000 t
b1000 *"
b110001111111111 Q(
b1110000000000 /
b1110000000000 y
b1110000000000 ;
b1110000000000 e
b1110000000000 T(
b1 M
b1 a
0L
1%
#540000001
